#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('site:server');
var http = require('http');

var models = require('../models');

/**
 * Get port from environment and store in Express.
 */

var port = parseInt(process.env.PORT, 10) || 3000;
app.set('port', port);

/**
 * Create HTTP server.
 */

var server;

function setupServer() {
  
  server = http.createServer(app);

  /**
   * Listen on provided port, on all network interfaces.
   */

  server.listen(port);
  server.on('error', onError);
  server.on('listening', onListening);
}

/**
 * Initialize ORM.
 */
/* TODO: Replace with migration-based setup! */
models.sequelize.sync({ force: true })
  .then(createExampleData)
  .then(setupServer)
  .then(function() {
    console.log("Server running on port " + port + " ...");
  });

function createExampleData() {
  var questionData = [
    { title: "Why don't we do it on the road?" },
    { title: "Is there life on Mars?" },
    { title: "Have you ever seen the rain?" }
  ];

  return models.Question
    .bulkCreate(questionData)
    .catch(function(err) {
      console.log("Unable to prepopulate questions: ", err);
    });
}

/**
 * Initialize sample questions.
 */
function createExampleQuestion() {
  models.Question
    .create({
      title: 'Example Question',
    })
    .then(function(question) {
      console.log('Created example question.');
      return question;
    })
    .catch(function(err) {
      console.log('Unable to create example question: ', err)
    })
    .then(function(question) {
      return createExampleAnswer(question);
    });
}

function createExampleAnswer(question) {
  return models.Answer
    .create({
      title: "An example answer"
    })
    .catch(function(err) {
      console.log("Unable to create example answer: ", err);
    })
    .then(function(answer) {
      console.log("Created example answer.");
      return answer;
    })
    .then(function(answer) {
      return question.addAnswer(answer);
    })
    .catch(function(err) {
      console.log("Unable to save example answer to question: ", err);
    })
    .then(function(answer) {
      console.log("Added example answer to question.");
      return answer;
    });
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error('Port ' + port + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error('Port ' + port + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  debug('Listening on port ' + server.address().port);
}
